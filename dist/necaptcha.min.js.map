{"version":3,"file":"necaptcha.min.js","sources":["../src/necaptcha.jsx"],"sourcesContent":["import React from 'react';\n\nexport default class NECaptcha extends React.Component {\n  static defaultProps = {\n    className: 'i-necaptcha',\n    // captchaId: '',\n    // element: '',\n    // mode: '',\n    // protocol: '',\n    width: 'auto',\n    lang: 'zh-CN',\n    // appendTo: '',\n    onReady: instance => {},\n    onVerify: () => {},\n    onClose: () => {},\n    onLoad: instance => {},\n    onError: err => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dom = null;\n    this.state = {\n      ins: null,\n      script: null,\n      timer: null,\n      count: 0,\n    };\n  }\n\n  // componentWillMount() {\n  //   const that = this;\n  //   console.log('componentWillMount', that.props, that.state);\n  // }\n\n  componentDidMount() {\n    const that = this;\n    // console.log('componentDidMount', that.props, that.state);\n    that.init();\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   const that = this;\n  //   console.log('componentWillReceiveProps', that.props, nextProps);\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   const that = this;\n  //   // console.log('shouldComponentUpdate', that.props, nextProps, that.state, nextState);\n  //   return nextProps.captchaId !== that.props.captchaId;\n  // }\n\n  // componentWillUpdate(nextProps, nextState) {\n  //   const that = this;\n  //   console.log('componentWillUpdate', that.props, nextProps, that.state, nextState);\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    const that = this;\n    // console.log('componentDidUpdate', prevProps, that.props, prevState, that.state);\n    that.init();\n  }\n\n  componentWillUnmount() {\n    const that = this;\n    // console.log('componentWillUnmount', that.props, that.state);\n    that.destroy();\n  }\n\n  init = () => {\n    const that = this;\n    // console.log('_init');\n    const id = 'react-necaptcha';\n\n    if (window.initNECaptcha) {\n      that.ready();\n      return;\n    }\n\n    if (document.getElementById(id)) {\n      that.wait();\n      return;\n    }\n\n    const ds = document.createElement('script');\n    ds.id = id;\n    ds.type = 'text/javascript';\n    ds.async = true;\n    ds.charset = 'utf-8';\n\n    if (ds.readyState) {\n      ds.onreadystatechange = () => {\n        if (ds.readyState === 'loaded' || ds.readyState === 'complete') {\n          ds.onreadystatechange = null;\n          that.ready();\n        }\n      };\n    } else {\n      ds.onload = () => {\n        ds.onload = null;\n        that.ready();\n      };\n    }\n\n    const protocol = window.location.protocol === 'http:' ? 'http:' : 'https:';\n    ds.src = `${protocol}//cstaticdun.126.net/load.min.js?_t=${new Date().getTime()}`;\n    const s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(ds, s);\n\n    that.setState({\n      script: ds,\n    });\n  };\n\n  wait = () => {\n    const that = this;\n    const { timer, count } = that.state;\n\n    if (timer || count > 0) {\n      return;\n    }\n\n    const newTimer = window.setInterval(() => {\n      if (window.initNECaptcha) {\n        window.clearInterval(newTimer);\n\n        that.setState({\n          timer: null,\n          count: 0,\n        });\n\n        window.setTimeout(that.ready.bind(that));\n        return;\n      }\n\n      let c = that.state.count;\n      c -= 1;\n\n      if (c < 1) {\n        window.clearInterval(newTimer);\n\n        that.setState({\n          timer: null,\n          count: 0,\n        });\n      } else {\n        that.setState({\n          count: c,\n        });\n      }\n    }, 100);\n\n    that.setState({\n      timer: newTimer,\n      count: 10,\n    });\n  };\n\n  ready = () => {\n    const that = this;\n    // console.log('_ready');\n    const { captchaId, width, lang, onReady, onVerify, onClose, onLoad, onError } = that.props;\n    const { ins } = that.state;\n\n    if (!window.initNECaptcha) {\n      return;\n    }\n\n    if (ins) {\n      return;\n    }\n\n    if (!that.dom) {\n      return;\n    }\n\n    const config = {\n      captchaId,\n      element: that.dom,\n      width,\n      lang,\n      onReady,\n      onVerify,\n      onClose,\n    };\n\n    if (that.props.mode) {\n      config.mode = that.props.mode;\n    }\n\n    if (that.props.protocol) {\n      config.protocol = that.props.protocol;\n    }\n\n    if (that.props.appendTo) {\n      config.appendTo = that.props.appendTo;\n    }\n\n    window.initNECaptcha(\n      config,\n      instance => {\n        that.setState({\n          ins: instance,\n        });\n\n        onLoad && onLoad(instance);\n      },\n      onError\n    );\n  };\n\n  destroy = () => {\n    const that = this;\n    const { timer } = that.state;\n\n    if (timer) {\n      window.clearInterval(timer);\n    }\n\n    // that.state.script.parentNode.removeChild(that.state.script);\n    // that.setState({\n    //   ins: null,\n    //   script: null,\n    // });\n  };\n\n  render() {\n    const that = this;\n    // console.log('render');\n    const { className } = that.props;\n\n    return (\n      <div\n        className={className}\n        ref={e => {\n          that.dom = e;\n        }}\n      />\n    );\n  }\n}\n"],"names":["NECaptcha","props","that","id","window","initNECaptcha","ready","document","getElementById","wait","ds","createElement","type","async","charset","readyState","onreadystatechange","onload","protocol","location","src","Date","getTime","s","getElementsByTagName","parentNode","insertBefore","setState","script","state","timer","count","newTimer","setInterval","clearInterval","setTimeout","bind","c","captchaId","width","lang","onReady","onVerify","onClose","onLoad","onError","ins","dom","config","element","mode","appendTo","instance","React","Component","this","init","prevProps","prevState","destroy","className","ref","e","err"],"mappings":"83BAEqBA,yBAiBPC,iJACJA,0EAiDD,eACCC,UAEAC,EAAK,qBAEPC,OAAOC,cACTH,EAAKI,gBAIHC,SAASC,eAAeL,GAC1BD,EAAKO,gBAIDC,EAAKH,SAASI,cAAc,UAClCD,EAAGP,GAAKA,EACRO,EAAGE,KAAO,kBACVF,EAAGG,OAAQ,EACXH,EAAGI,QAAU,QAETJ,EAAGK,WACLL,EAAGM,mBAAqB,WACA,WAAlBN,EAAGK,YAA6C,aAAlBL,EAAGK,aACnCL,EAAGM,mBAAqB,KACxBd,EAAKI,UAITI,EAAGO,OAAS,WACVP,EAAGO,OAAS,KACZf,EAAKI,aAIHY,EAAwC,UAA7Bd,OAAOe,SAASD,SAAuB,QAAU,SAClER,EAAGU,cAASF,kDAA+C,IAAIG,MAAOC,eAChEC,EAAIhB,SAASiB,qBAAqB,UAAU,GAClDD,EAAEE,WAAWC,aAAahB,EAAIa,GAE9BrB,EAAKyB,SAAS,CACZC,OAAQlB,wBAIL,eACCR,YACmBA,EAAK2B,MAAtBC,IAAAA,MAAOC,IAAAA,WAEXD,GAASC,EAAQ,QAIfC,EAAW5B,OAAO6B,YAAY,cAC9B7B,OAAOC,qBACTD,OAAO8B,cAAcF,GAErB9B,EAAKyB,SAAS,CACZG,MAAO,KACPC,MAAO,SAGT3B,OAAO+B,WAAWjC,EAAKI,MAAM8B,KAAKlC,QAIhCmC,EAAInC,EAAK2B,MAAME,OACnBM,GAAK,GAEG,GACNjC,OAAO8B,cAAcF,GAErB9B,EAAKyB,SAAS,CACZG,MAAO,KACPC,MAAO,KAGT7B,EAAKyB,SAAS,CACZI,MAAOM,KAGV,KAEHnC,EAAKyB,SAAS,CACZG,MAAOE,EACPD,MAAO,0BAIH,eACA7B,YAE0EA,EAAKD,MAA7EqC,IAAAA,UAAWC,IAAAA,MAAOC,IAAAA,KAAMC,IAAAA,QAASC,IAAAA,SAAUC,IAAAA,QAASC,IAAAA,OAAQC,IAAAA,QAC5DC,EAAQ5C,EAAK2B,MAAbiB,OAEH1C,OAAOC,gBAIRyC,GAIC5C,EAAK6C,SAIJC,EAAS,CACbV,UAAAA,EACAW,QAAS/C,EAAK6C,IACdR,MAAAA,EACAC,KAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,QAAAA,GAGEzC,EAAKD,MAAMiD,OACbF,EAAOE,KAAOhD,EAAKD,MAAMiD,MAGvBhD,EAAKD,MAAMiB,WACb8B,EAAO9B,SAAWhB,EAAKD,MAAMiB,UAG3BhB,EAAKD,MAAMkD,WACbH,EAAOG,SAAWjD,EAAKD,MAAMkD,UAG/B/C,OAAOC,cACL2C,EACA,SAAAI,GACElD,EAAKyB,SAAS,CACZmB,IAAKM,IAGPR,GAAUA,EAAOQ,IAEnBP,0BAIM,eAEAf,UAAeD,MAAfC,MAEJA,GACF1B,OAAO8B,cAAcJ,OAnMlBiB,IAAM,OACNlB,MAAQ,CACXiB,IAAK,KACLlB,OAAQ,KACRE,MAAO,KACPC,MAAO,2PAxB0BsB,EAAMC,6DAkC5BC,KAERC,kDAmBYC,EAAWC,GACfH,KAERC,sDAIQD,KAERI,+CAiKCzD,EAAOqD,KAELK,EAAc1D,EAAKD,MAAnB2D,iBAGNP,uBACEO,UAAWA,EACXC,IAAK,SAAAC,GACH5D,EAAK6C,IAAMe,mDAzOA9D,iBACG,CACpB4D,UAAW,cAKXrB,MAAO,OACPC,KAAM,QAENC,QAAS,SAAAW,KACTV,SAAU,aACVC,QAAS,aACTC,OAAQ,SAAAQ,KACRP,QAAS,SAAAkB"}