{"version":3,"file":"necaptcha.min.js","sources":["../src/necaptcha.jsx"],"sourcesContent":["import React from 'react';\n\nconst SCRIPT_ID = 'react-necaptcha';\n\nexport default class NECaptcha extends React.Component {\n  static defaultProps = {\n    className: 'i-necaptcha',\n    // captchaId: '',\n    // element: '',\n    // mode: '',\n    // protocol: '',\n    width: 'auto',\n    lang: 'zh-CN',\n    // appendTo: '',\n    onReady: instance => {},\n    onVerify: () => {},\n    onClose: () => {},\n    onLoad: instance => {},\n    onError: err => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dom = null;\n    this.state = {\n      ins: null,\n      script: null,\n      elem: null,\n    };\n  }\n\n  // componentWillMount() {\n  //   const that = this;\n  //   console.log('componentWillMount', that.props, that.state);\n  // }\n\n  componentDidMount() {\n    const that = this;\n    // console.log('componentDidMount', that.props, that.state);\n    that.init();\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   const that = this;\n  //   console.log('componentWillReceiveProps', that.props, nextProps);\n  // }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   const that = this;\n  //   // console.log('shouldComponentUpdate', that.props, nextProps, that.state, nextState);\n  //   return nextProps.captchaId !== that.props.captchaId;\n  // }\n\n  // componentWillUpdate(nextProps, nextState) {\n  //   const that = this;\n  //   console.log('componentWillUpdate', that.props, nextProps, that.state, nextState);\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    const that = this;\n    // console.log('componentDidUpdate', prevProps, that.props, prevState, that.state);\n    that.init();\n  }\n\n  componentWillUnmount() {\n    const that = this;\n    // console.log('componentWillUnmount', that.props, that.state);\n    that.destroy();\n  }\n\n  init = () => {\n    const that = this;\n    // console.log('_init');\n\n    if (window.initNECaptcha) {\n      that.ready();\n      return;\n    }\n\n    const elem = document.getElementById(SCRIPT_ID);\n    if (elem) {\n      elem.addEventListener('Im-ready', that.ready.bind(that), false);\n      that.setState({\n        elem,\n      })\n      return;\n    }\n\n    const ds = document.createElement('script');\n    ds.id = SCRIPT_ID;\n    ds.type = 'text/javascript';\n    ds.async = true;\n    ds.charset = 'utf-8';\n\n    if (ds.readyState) {\n      ds.onreadystatechange = () => {\n        if (ds.readyState === 'loaded' || ds.readyState === 'complete') {\n          ds.onreadystatechange = null;\n          // that.ready();\n          that.triggerEvent('Im-ready');\n        }\n      };\n    } else {\n      ds.onload = () => {\n        ds.onload = null;\n        // that.ready();\n        that.triggerEvent('Im-ready');\n      };\n    }\n\n    const protocol = window.location.protocol === 'http:' ? 'http:' : 'https:';\n    ds.src = `${protocol}//cstaticdun.126.net/load.min.js?_t=${new Date().getTime()}`;\n    const s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(ds, s);\n\n    that.setState({\n      script: ds,\n    });\n  };\n\n  ready = event => {\n    const that = this;\n    // console.log('_ready');\n    const { captchaId, width, lang, onReady, onVerify, onClose, onLoad, onError } = that.props;\n    const { ins, elem } = that.state;\n\n    if (!window.initNECaptcha) {\n      return;\n    }\n\n    if (ins) {\n      return;\n    }\n\n    if (!that.dom) {\n      return;\n    }\n\n    const config = {\n      captchaId,\n      element: that.dom,\n      width,\n      lang,\n      onReady,\n      onVerify,\n      onClose,\n    };\n\n    if (that.props.mode) {\n      config.mode = that.props.mode;\n    }\n\n    if (that.props.protocol) {\n      config.protocol = that.props.protocol;\n    }\n\n    if (that.props.appendTo) {\n      config.appendTo = that.props.appendTo;\n    }\n\n    window.initNECaptcha(\n      config,\n      instance => {\n        that.setState({\n          ins: instance,\n        });\n\n        onLoad && onLoad(instance);\n      },\n      onError\n    );\n\n    if (elem) {\n      elem.removeEventListener('Im-ready', that.ready.bind(that), false);\n    }\n  };\n\n  destroy = () => {\n    const that = this;\n    const { elem } = that.state;\n\n    if (elem) {\n      elem.removeEventListener('Im-ready', that.ready.bind(that), false);\n    }\n\n    // script.parentNode.removeChild(that.state.script);\n\n    // that.setState({\n    //   ins: null,\n    //   script: null,\n    //   elem: null,\n    // });\n  };\n\n  triggerEvent = (name) => {\n    const elem = document.getElementById(SCRIPT_ID);\n    if (!elem) {\n      return;\n    }\n\n    const e = document.createEvent('Event');\n    e.initEvent(name, true, true);\n    elem.dispatchEvent(e);\n  };\n\n  render() {\n    const that = this;\n    // console.log('render');\n    const { className } = that.props;\n\n    return (\n      <div\n        className={className}\n        ref={e => {\n          that.dom = e;\n        }}\n      />\n    );\n  }\n}\n"],"names":["SCRIPT_ID","NECaptcha","props","that","window","initNECaptcha","ready","elem","document","getElementById","addEventListener","bind","setState","ds","createElement","id","type","async","charset","readyState","onreadystatechange","triggerEvent","onload","protocol","location","src","Date","getTime","s","getElementsByTagName","parentNode","insertBefore","script","event","captchaId","width","lang","onReady","onVerify","onClose","onLoad","onError","state","ins","dom","config","element","mode","appendTo","instance","removeEventListener","name","e","createEvent","initEvent","dispatchEvent","React","Component","this","init","prevProps","prevState","destroy","className","ref","err"],"mappings":"03BAEA,IAAMA,EAAY,kBAEGC,yBAiBPC,iJACJA,0EAgDD,eACCC,aAGFC,OAAOC,cACTF,EAAKG,iBAIDC,EAAOC,SAASC,eAAeT,MACjCO,SACFA,EAAKG,iBAAiB,WAAYP,EAAKG,MAAMK,KAAKR,IAAO,QACzDA,EAAKS,SAAS,CACZL,KAAAA,QAKEM,EAAKL,SAASM,cAAc,UAClCD,EAAGE,GAAKf,EACRa,EAAGG,KAAO,kBACVH,EAAGI,OAAQ,EACXJ,EAAGK,QAAU,QAETL,EAAGM,WACLN,EAAGO,mBAAqB,WACA,WAAlBP,EAAGM,YAA6C,aAAlBN,EAAGM,aACnCN,EAAGO,mBAAqB,KAExBjB,EAAKkB,aAAa,cAItBR,EAAGS,OAAS,WACVT,EAAGS,OAAS,KAEZnB,EAAKkB,aAAa,iBAIhBE,EAAwC,UAA7BnB,OAAOoB,SAASD,SAAuB,QAAU,SAClEV,EAAGY,cAASF,kDAA+C,IAAIG,MAAOC,eAChEC,EAAIpB,SAASqB,qBAAqB,UAAU,GAClDD,EAAEE,WAAWC,aAAalB,EAAIe,GAE9BzB,EAAKS,SAAS,CACZoB,OAAQnB,yBAIJ,SAAAoB,OACA9B,YAE0EA,EAAKD,MAA7EgC,IAAAA,UAAWC,IAAAA,MAAOC,IAAAA,KAAMC,IAAAA,QAASC,IAAAA,SAAUC,IAAAA,QAASC,IAAAA,OAAQC,IAAAA,UAC9CtC,EAAKuC,MAAnBC,IAAAA,IAAKpC,IAAAA,QAERH,OAAOC,gBAIRsC,GAICxC,EAAKyC,SAIJC,EAAS,CACbX,UAAAA,EACAY,QAAS3C,EAAKyC,IACdT,MAAAA,EACAC,KAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,QAAAA,GAGEpC,EAAKD,MAAM6C,OACbF,EAAOE,KAAO5C,EAAKD,MAAM6C,MAGvB5C,EAAKD,MAAMqB,WACbsB,EAAOtB,SAAWpB,EAAKD,MAAMqB,UAG3BpB,EAAKD,MAAM8C,WACbH,EAAOG,SAAW7C,EAAKD,MAAM8C,UAG/B5C,OAAOC,cACLwC,EACA,SAAAI,GACE9C,EAAKS,SAAS,CACZ+B,IAAKM,IAGPT,GAAUA,EAAOS,IAEnBR,GAGElC,GACFA,EAAK2C,oBAAoB,WAAY/C,EAAKG,MAAMK,KAAKR,IAAO,0BAItD,eACFA,UACEI,EAASJ,EAAKuC,MAAdnC,KAEJA,GACFA,EAAK2C,oBAAoB,WAAY/C,EAAKG,MAAMK,KAAKR,IAAO,8BAYjD,SAACgD,OACR5C,EAAOC,SAASC,eAAeT,MAChCO,OAIC6C,EAAI5C,SAAS6C,YAAY,SAC/BD,EAAEE,UAAUH,GAAM,GAAM,GACxB5C,EAAKgD,cAAcH,QAnLdR,IAAM,OACNF,MAAQ,CACXC,IAAK,KACLX,OAAQ,KACRzB,KAAM,8PAvB2BiD,EAAMC,6DAiC5BC,KAERC,kDAmBYC,EAAWC,GACfH,KAERC,sDAIQD,KAERI,+CA2IC3D,EAAOuD,KAELK,EAAc5D,EAAKD,MAAnB6D,iBAGNP,uBACEO,UAAWA,EACXC,IAAK,SAAAZ,GACHjD,EAAKyC,IAAMQ,mDAlNAnD,iBACG,CACpB8D,UAAW,cAKX5B,MAAO,OACPC,KAAM,QAENC,QAAS,SAAAY,KACTX,SAAU,aACVC,QAAS,aACTC,OAAQ,SAAAS,KACRR,QAAS,SAAAwB"}