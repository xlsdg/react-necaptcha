{"version":3,"file":"necaptcha.min.js","sources":["../src/necaptcha.jsx"],"sourcesContent":["import React from 'react';\n\nconst SCRIPT_ID = 'react-necaptcha';\n\nexport default class NECaptcha extends React.Component {\n  static defaultProps = {\n    className: 'i-necaptcha',\n    // captchaId: '',\n    // element: '',\n    // mode: '',\n    // protocol: '',\n    width: 'auto',\n    lang: 'zh-CN',\n    // appendTo: '',\n    onReady: instance => {},\n    onVerify: () => {},\n    onClose: () => {},\n    onLoad: instance => {},\n    onError: err => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.dom = null;\n    this.state = {\n      ins: null,\n      script: null,\n      elem: null,\n    };\n  }\n\n  // componentWillMount() {\n  //   const that = this;\n  //   console.log('componentWillMount', that.props, that.state);\n  // }\n\n  componentDidMount() {\n    const that = this;\n    // console.log('componentDidMount', that.props, that.state);\n    that.init();\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   const that = this;\n  //   console.log('componentWillReceiveProps', that.props, nextProps);\n  // }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const that = this;\n    // console.log('shouldComponentUpdate', that.props, nextProps, that.state, nextState);\n    const { className, captchaId, mode, protocol, width, lang, appendTo } = that.props;\n\n    const isUpdate =\n      className !== nextProps.className ||\n      captchaId !== nextProps.captchaId ||\n      mode !== nextProps.mode ||\n      protocol !== nextProps.protocol ||\n      width !== nextProps.width ||\n      lang !== nextProps.lang ||\n      appendTo !== nextProps.appendTo;\n\n    return isUpdate;\n  }\n\n  // componentWillUpdate(nextProps, nextState) {\n  //   const that = this;\n  //   console.log('componentWillUpdate', that.props, nextProps, that.state, nextState);\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    const that = this;\n    // console.log('componentDidUpdate', prevProps, that.props, prevState, that.state);\n    that.init();\n  }\n\n  componentWillUnmount() {\n    const that = this;\n    // console.log('componentWillUnmount', that.props, that.state);\n    that.destroy();\n  }\n\n  init = () => {\n    const that = this;\n    // console.log('init');\n    const { elem } = that.state;\n\n    if (window.initNECaptcha) {\n      that.ready();\n      return;\n    }\n\n    const script = document.getElementById(SCRIPT_ID);\n    if (script) {\n      if (elem) {\n        return;\n      }\n\n      script.addEventListener('Im-ready', that.ready.bind(that), false);\n      that.setState({\n        elem: script,\n      });\n      return;\n    }\n\n    const ds = document.createElement('script');\n    ds.id = SCRIPT_ID;\n    ds.type = 'text/javascript';\n    ds.async = true;\n    ds.charset = 'utf-8';\n\n    if (ds.readyState) {\n      ds.onreadystatechange = () => {\n        if (ds.readyState === 'loaded' || ds.readyState === 'complete') {\n          ds.onreadystatechange = null;\n          that.ready();\n          that.triggerEvent('Im-ready');\n        }\n      };\n    } else {\n      ds.onload = () => {\n        ds.onload = null;\n        that.ready();\n        that.triggerEvent('Im-ready');\n      };\n    }\n\n    const protocol = window.location.protocol === 'http:' ? 'http:' : 'https:';\n    ds.src = `${protocol}//cstaticdun.126.net/load.min.js?_t=${new Date().getTime()}`;\n    const s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(ds, s);\n\n    that.setState({\n      script: ds,\n    });\n  };\n\n  ready = event => {\n    const that = this;\n    // console.log('ready');\n    const { captchaId, width, lang, onReady, onVerify, onClose, onLoad, onError } = that.props;\n    const { ins, elem } = that.state;\n\n    if (!window.initNECaptcha) {\n      return;\n    }\n\n    if (ins) {\n      return;\n    }\n\n    if (!that.dom) {\n      return;\n    }\n\n    const config = {\n      captchaId,\n      element: that.dom,\n      width,\n      lang,\n      onReady,\n      onVerify,\n      onClose,\n    };\n\n    if (that.props.mode) {\n      config.mode = that.props.mode;\n    }\n\n    if (that.props.protocol) {\n      config.protocol = that.props.protocol;\n    }\n\n    if (that.props.appendTo) {\n      config.appendTo = that.props.appendTo;\n    }\n\n    window.initNECaptcha(\n      config,\n      instance => {\n        that.setState({\n          ins: instance,\n        });\n\n        onLoad && onLoad(instance);\n      },\n      onError\n    );\n\n    if (elem) {\n      elem.removeEventListener('Im-ready', that.ready.bind(that), false);\n    }\n  };\n\n  destroy = () => {\n    const that = this;\n    // console.log('destroy');\n    const { elem } = that.state;\n\n    if (elem) {\n      elem.removeEventListener('Im-ready', that.ready.bind(that), false);\n    }\n\n    // script.parentNode.removeChild(that.state.script);\n\n    // that.setState({\n    //   ins: null,\n    //   script: null,\n    //   elem: null,\n    // });\n  };\n\n  triggerEvent = name => {\n    const that = this;\n    // console.log('triggerEvent');\n    const { elem, script } = that.state;\n\n    if (!elem && !script) {\n      return;\n    }\n\n    const e = document.createEvent('Event');\n    e.initEvent(name, true, true);\n\n    const dom = elem || script;\n    dom.dispatchEvent(e);\n  };\n\n  render() {\n    const that = this;\n    // console.log('render');\n    const { className } = that.props;\n\n    return (\n      <div\n        className={className}\n        ref={e => {\n          that.dom = e;\n        }}\n      />\n    );\n  }\n}\n"],"names":["SCRIPT_ID","NECaptcha","props","that","elem","state","window","initNECaptcha","ready","script","document","getElementById","addEventListener","bind","setState","ds","createElement","id","type","async","charset","readyState","onreadystatechange","triggerEvent","onload","protocol","location","src","Date","getTime","s","getElementsByTagName","parentNode","insertBefore","event","captchaId","width","lang","onReady","onVerify","onClose","onLoad","onError","ins","dom","config","element","mode","appendTo","instance","removeEventListener","name","e","createEvent","initEvent","dispatchEvent","React","Component","this","init","nextProps","nextState","className","prevProps","prevState","destroy","ref","err"],"mappings":"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"}